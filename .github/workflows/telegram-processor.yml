name: Telegram 思考处理器

on:
  schedule:
    # 每 10 分钟检查一次
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      action:
        description: '要执行的操作'
        default: 'process'
        required: true
        type: choice
        options:
          - process
          - reminder
          - publish_digest
          - process_queues
          - list_queues

jobs:
  process-telegram:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests python-telegram-bot python-dateutil pyyaml

      - name: 准备目录
        run: |
          mkdir -p data
          mkdir -p content/zh/posts
          mkdir -p content/zh/thoughts
          mkdir -p content/zh/daily
          mkdir -p content/posts
          mkdir -p content/thoughts
          mkdir -p content/daily

          # 如果不存在则初始化 JSON 文件
          [ -f data/queues.json ] || echo '{"threads":[],"telegram":[],"mastodon":[]}' > data/queues.json
          [ -f data/untagged_thoughts.json ] || echo '[]' > data/untagged_thoughts.json
          [ -f data/last_update_id.txt ] || echo '0' > data/last_update_id.txt
          [ -f data/config.json ] || echo '{"sns_channels":{"threads":{"enabled":true,"post_windows":["07:03","12:15","19:47"],"credentials":{}},"telegram":{"enabled":true,"post_windows":["08:00","13:00","20:00"],"credentials":{}},"mastodon":{"enabled":true,"post_windows":["09:00","15:00","21:00"],"credentials":{}}},"blog":{"daily_digest_time":"21:45","reminder_time":"21:45"}}' > data/config.json

      - name: 运行相应操作
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          AUTHORIZED_USER_ID: ${{ secrets.TELEGRAM_USER_ID }}
          ACTION: ${{ github.event.inputs.action || 'process' }}
          THREADS_USERNAME: ${{ secrets.THREADS_USERNAME }}
          THREADS_PASSWORD: ${{ secrets.THREADS_PASSWORD }}
          MASTODON_TOKEN: ${{ secrets.MASTODON_TOKEN }}
          MASTODON_INSTANCE: ${{ secrets.MASTODON_INSTANCE }}
        run: |
          python scripts/telegram_handler.py --action $ACTION

      - name: 提交更改
        run: |
          git config --global user.name "Flow Bot"
          git config --global user.email "bot@example.com"

          git add data/ content/

          # 只有在有更改时才提交
          if [ -n "$(git status --porcelain)" ]; then
            # 根据处理的内容自定义提交消息
            if git status --porcelain | grep -q "content/zh/posts"; then
              BLOG_COUNT=$(git status --porcelain | grep "content/zh/posts" | wc -l)
              COMMIT_MSG="📝 添加了 ${BLOG_COUNT} 篇博客文章"
            elif git status --porcelain | grep -q "content/zh/thoughts"; then
              THOUGHT_COUNT=$(git status --porcelain | grep "content/zh/thoughts" | wc -l)
              COMMIT_MSG="💭 添加了 ${THOUGHT_COUNT} 条想法"
            elif git status --porcelain | grep -q "content/zh/daily"; then
              COMMIT_MSG="📅 添加了日记"
            elif git status --porcelain | grep -q "data/"; then
              COMMIT_MSG="🔄 更新了数据文件"
            else
              COMMIT_MSG="更新内容"
            fi

            git commit -m "$COMMIT_MSG"
            git push
          else
            echo "没有变更需要提交"
          fi
